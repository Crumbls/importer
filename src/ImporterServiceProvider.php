<?php

namespace Crumbls\Importer;

use Crumbls\Importer\Console\ImporterCommand;
use Crumbls\Importer\Events\ImportServiceInitialized;
use Crumbls\Importer\Events\StorageServiceInitialized;
use Crumbls\Importer\Listeners\RegisterImportDrivers;
use Crumbls\Importer\Listeners\RegisterStorageDrivers;
use Crumbls\Importer\Services\ImportService;
use Crumbls\Importer\Services\StorageService;
use Illuminate\Support\Facades\Event;
use Spatie\LaravelPackageTools\Package;
use Spatie\LaravelPackageTools\PackageServiceProvider;

class ImporterServiceProvider extends PackageServiceProvider
{
    public function configurePackage(Package $package): void
    {
        $package
            ->name('importer')
            ->hasConfigFile()
            ->hasViews();
    }

	public function packageBooted()
	{
		parent::packageBooted(); // TODO: Change the autogenerated stub


		// Register event listener for driver registration
		Event::listen(ImportServiceInitialized::class, RegisterImportDrivers::class);
		Event::listen(StorageServiceInitialized::class, RegisterStorageDrivers::class);

		if ($this->app->runningInConsole()) {
			$this->commands([
				ImporterCommand::class,
			]);
		}
	}

	public function packageRegistered() : void {
		parent::packageRegistered();

		$this->app->singleton(ImportService::class, function ($app) {
			return new ImportService($app);
		});

		$this->app->alias(ImportService::class, 'importer');


		$this->app->singleton(StorageService::class, function ($app) {
			return new StorageService($app);
		});

		$this->app->alias(StorageService::class, 'importer-storage');
	}

}